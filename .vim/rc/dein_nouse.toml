# --------------------------------------
# colorscheme
#
[[plugins]]
repo = 'tomasiser/vim-code-dark'
if = 0
on_event = ['VimEnter']
hook_source = '''
set t_Co=256
set t_ut=
colorscheme codedark
'''

[[plugins]]
repo = 'jacoborus/tender.vim'
if = 0
on_event = ['VimEnter']
hook_source = '''
colorscheme tender
'''

# --------------------------------------
# highlight
#
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
if = "has('nvim')"
on_event = ['VimEnter']
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  indent = {
    enable = true,
  },
  ensure_installed = {
    "bash",
    "css",
    "html",
    "json",
    "markdown",
    "python",
    "r",
    "toml",
    "vim",
  },
  highlight = {
    enable = true,
    disable = {},
      additional_vim_regex_highlighting = false,
  },
}
EOF
'''

# --------------------------------------
# filer
#
[[plugins]]
repo = 'lambdalisue/fern.vim'
on_event = ['VimEnter']
hook_source = '''
nnoremap <silent> <Plug>(my-filer)t :Fern . -reveal=% -drawer -toggle<CR>
let g:fern#default_hidden = 1
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
on_source = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'
on_source = ['fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
let g:fern#renderer = 'nerdfont'
'''

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

# --------------------------------------
# statusline
#
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = '''
set laststatus=2
set noshowmode
if !has('gui_running')
  set t_Co=256
endif

let g:lightline = {
  \   'colorscheme': 'codedark',
  \   'component': {
  \     'myblank': ' ',
  \   },
  \   'active': {
  \     'left': [
  \       ['mode', 'paste'],
  \       ['filename', 'readonly', 'modified'],
  \     ],
  \     'right': [
  \       ['lineinfo', 'myblank'],
  \       ['percent'],
  \       ['fileformat', 'fileencoding', 'filetype'],
  \     ],
  \   },
  \   'inactive': {
  \     'left': [
  \       ['filename'],
  \     ],
  \     'right': [
  \       [],
  \     ],
  \   },
  \   'tab': {
  \     'active': ['tabnum', 'filename', 'modified'],
  \     'inactive': ['tabnum', 'filename', 'modified'],
  \   },
  \   'tabline': {
  \     'left': [
  \       ['tabs'],
  \     ],
  \     'right': [
  \       [],
  \     ],
  \   },
  \   'separator': {
  \     'left': '',
  \     'right': '',
  \   },
  \   'subseparator': {
  \     'left': '|',
  \     'right': '|',
  \   },
  \   'component_function': {
  \     'mycwdname': 'LLGetCwdName',
  \     'mypath': 'LLGetPath',
  \   },
  \ }

function! LLGetCwdName() abort
  return 'CWD: ' . fnamemodify(getcwd(), ':t')
endfunction

function! LLGetPath() abort
  return substitute(fnamemodify(@%, ':p'), '\\', '\/', 'g')
endfunction
'''

# --------------------------------------
# Git
#
[[plugins]]
repo = 'lambdalisue/gin.vim'
on_source = ['denops.vim']

[[plugins]]
repo = 'lambdalisue/gina.vim'
on_event = ['VimEnter']

# --------------------------------------
# Markdown
#
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_source = '''
let g:tex_conceal = ""
let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_math = 1
let g:vim_markdown_no_default_key_mappings = 1
'''
