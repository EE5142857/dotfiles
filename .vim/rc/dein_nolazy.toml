# --------------------------------------
# Shougo
#
[[plugins]]
repo = 'Shougo/dein.vim'

# --------------------------------------
# Deno
#
[[plugins]]
repo = 'vim-denops/denops.vim'
if = "has('nvim')"

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'
if = "has('nvim')"

# --------------------------------------
# LSP
#
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if = "has('nvim')"

[[plugins]]
# https://zenn.dev/mattn/articles/b83f9d94202914
repo = 'mattn/vim-lsp-settings'
if = "has('nvim')"

# --------------------------------------
# filer
#
[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
nnoremap <silent> <Plug>(my-filer)t :Fern . -reveal=% -drawer -toggle<CR>
let g:fern#default_hidden = 1
'''
# nnoremap <silent> <Plug>(my-filer)t :Fern . -reveal=% -drawer -toggle -width=25<CR>

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
hook_add = '''
let g:fern#renderer = 'nerdfont'
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'
hook_add = '''
nnoremap <silent> <Plug>(my-filer)b :Fern bookmark:///<CR>
'''

# --------------------------------------
# view
#
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2
'''

[[plugins]]
repo = 'justinmk/vim-sneak'
hook_add = '''
let g:sneak#label = 1
nmap s <Plug>Sneak_s
nmap S <Plug>Sneak_S
'''

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_start_key = "\<C-w>\<C-w>"
'''

# --------------------------------------
# edit
#
[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'machakann/vim-sandwich'

# --------------------------------------
# colorscheme
#
[[plugins]]
repo = 'tomasiser/vim-code-dark'
hook_source = '''
set t_Co=256
set t_ut=
colorscheme codedark
'''

# --------------------------------------
# statusline
#
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = '''
set laststatus=2
set noshowmode
if !has('gui_running')
  set t_Co=256
endif

let g:lightline = {
\ 'colorscheme': 'codedark',
\ 'component': {
\   'mylineinfo': '%3l/%L, %-2c',
\ },
\ 'active': {
\   'left': [
\     ['mode', 'paste'],
\     ['mycwdname', 'filename', 'readonly', 'modified']
\   ],
\   'right': [
\     ['mystatus'],
\     ['lineinfo'],
\     ['fileformat', 'fileencoding', 'filetype']
\   ]
\ },
\ 'inactive': {
\   'left': [
\     ['filename']
\   ],
\   'right': [
\     []
\   ]
\ },
\ 'tab': {
\   'active': ['tabnum', 'filename', 'modified'],
\   'inactive': ['tabnum', 'filename', 'modified']
\ },
\ 'tabline': {
\   'left': [
\     ['tabs']
\   ],
\   'right': [
\     []
\   ]
\ },
\ 'separator': {
\   'left': "",
\   'right': ""
\ },
\ 'subseparator': {
\   'left': "|",
\   'right': "|"
\ },
\ 'component_function': {
\   'mystatus': 'LLGetStatus',
\   'mycwdname': 'LLGetCwdName',
\   'mypath': 'LLGetPath'
\ }
\}

function! LLGetStatus() abort
  return "\ue62b" . ' '
endfunction

function! LLGetCwdName() abort
  return "\uf413" . fnamemodify(getcwd(), ':t')
endfunction

function! LLGetPath() abort
  return substitute(fnamemodify(@%, ':p'), '\\', '\/', 'g')
endfunction
'''

# --------------------------------------
# Python
#
[[plugins]]
repo = 'goerz/jupytext.vim'
if = "has('nvim')"
hook_add = '''
let g:jupytext_enable = 1
let g:jupytext_fmt = 'py:percent'
let g:jupytext_filetype_map = {'py': 'python'}
'''
