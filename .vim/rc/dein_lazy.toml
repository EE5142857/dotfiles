# --------------------------------------
# Shougo
#
[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_source = ['markdown']
hook_source = '''
let g:neosnippet#snippets_directory = '~/.vim/snippets'
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_source = ['neosnippet.vim']

# --------------------------------------
# Markdown
#
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_source = '''
let g:tex_conceal = ""
let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_math = 1
let g:vim_markdown_no_default_key_mappings = 1
'''

# --------------------------------------
# Python
#
[[plugins]]
repo = 'jpalardy/vim-slime'
if = "has('nvim')"
on_ft = ['python']
hook_source = '''
let g:slime_cell_delimiter = '# %%'
let g:slime_no_mappings = 1
let g:slime_target = "neovim"
nmap <C-c><C-c> <Plug>SlimeSendCell

augroup UpdateJobid
  autocmd!
  autocmd BufLeave *
  \ if &buftype == 'terminal'
  \|  let @z = &channel
  \|endif
augroup END

function! SlimeOverride_EscapeText_python(text) abort
  let l:l_out = split(join(split(a:text, "\n", 1), "\r\n;"), ";", 1)
  return ["%paste -q", "\r\n"] + l:l_out + ["--", "\r\n"]
endfunction
'''
